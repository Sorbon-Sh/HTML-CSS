@keyframes - При указании стилей CSS внутри @keyframes правила анимация будет постепенно меняться с текущего стиля на новый в определенные моменты времени.


animation-name: задать имя анимации блоку, элементу

@keyframes example {
  0%   {background-color: red;}
  25%  {background-color: yellow;}
  50%  {background-color: blue;}
  100% {background-color: green;}
}

/* The element to apply the animation to */
div {
  width: 100px;
  height: 100px;
  background-color: red;
  animation-name: example;
  animation-duration: 4s;
}



animation-duration: определяет, сколько времени должна занять анимация для завершения. Если animation-durationсвойство не указано, анимация не будет выполняться, поскольку значение по умолчанию равно 0 с (0 секунд). 

animation-delay: определяет задержку начала анимации. 2s
animation-iteration-count: указывает, сколько раз должна запускаться анимация. 3s, infinite - без остановки 


==========================

animation-direction: указывает, должна ли анимация воспроизводиться вперед, назад или в чередующихся циклах.

Свойство animation-direction может иметь следующие значения:

normal- Анимация воспроизводится как обычно (вперед). Это по умолчанию
reverse- Анимация воспроизводится в обратном направлении (назад)
alternate - Анимация сначала воспроизводится вперед, затем назад.
alternate-reverse- Анимация сначала воспроизводится назад, затем вперед.

============================


animation-fill-mode: определяет стиль целевого элемента, когда анимация не воспроизводится (до ее начала, после окончания или в обоих случаях).

Свойство animation-fill-mode может иметь следующие значения:

none- Значение по умолчанию. Анимация не будет применять стили к элементу до или после его выполнения.
forwards- Элемент сохранит значения стиля, заданные последним ключевым кадром (зависит от animation-direction и animation-iteration-count)
backwards- Элемент получит значения стиля, заданные первым ключевым кадром (зависит от направления анимации), и сохранит их в течение периода задержки анимации.
both- Анимация будет следовать правилам как для прямого, так и для обратного направления, расширяя свойства анимации в обоих направлениях.

===========================

animation: Того же эффекта анимации, что и выше, можно добиться, используя сокращенное animationсвойство:

Пример
div {
  animation: example 5s linear 2s infinite alternate;
}